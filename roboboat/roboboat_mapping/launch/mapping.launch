<launch>

<<<<<<< HEAD
	<!-- BA: Taking these from "rtabmap_ros/launch/demo/demo_turtlebot_mapping.launch" -->

	<arg name="database_path"     default="rtabmap.db"/>
	<arg name="rgbd_odometry"     default="false"/>
	<arg name="localization"      default="false"/>
	<arg name="simulation"        default="true"/>
	<arg name="sw_registered"     default="false"/>
	<arg     if="$(arg localization)" name="args"  default=""/>
	<arg unless="$(arg localization)" name="args"  default="--delete_db_on_start"/>

	<!-- Adjust topics here -->
	<arg     if="$(arg simulation)" name="rgb_topic"   default="/camera/rgb/image_raw"/>
	<arg unless="$(arg simulation)" name="rgb_topic"   default="/camera/rgb/image_rect_color"/>

	<!-- These stereo image topics need to be rectified -->
	<arg     if="$(arg simulation)" name="left_image_topic"   default="/multisense_sl/camera/0/left/image_raw"/>
	<arg unless="$(arg simulation)" name="left_image_topic"   default="/multisense_sl/camera/0/left/image_raw"/>
	<arg     if="$(arg simulation)" name="right_image_topic"   default="/multisense_sl/camera/0/right/image_raw"/>
	<arg unless="$(arg simulation)" name="right_image_topic"   default="/multisense_sl/camera/0/right/image_raw"/>

	<arg     if="$(arg simulation)" name="depth_topic" default="/bowPoints/depth/image_raw"/>
	<arg unless="$(arg simulation)" name="depth_topic" default="/bowPoints/depth/image_raw"/>

	<arg name="camera_info_topic" default="/camera/rgb/camera_info"/>
	<arg     if="$(arg simulation)" name="left_camera_info_topic" default="/multisense_sl/camera/0/left/camera_info"/>
	<arg unless="$(arg simulation)" name="left_camera_info_topic" default="/multisense_sl/camera/0/left/camera_info"/>
	<arg     if="$(arg simulation)" name="right_camera_info_topic" default="/multisense_sl/camera/0/right/camera_info"/>
	<arg unless="$(arg simulation)" name="right_camera_info_topic" default="/multisense_sl/camera/0/right/camera_info"/>

	<!-- 0 indicates the LiDAR on the BOW. STERN currently not included. -->
	<arg     if="$(arg simulation)" name="scan_topic" default="/laser/scan/0" />
	<arg unless="$(arg simulation)" name="scan_topic" default="/laser/scan/0" />

	<arg name="wait_for_transform"  default="0.2"/>

	<!-- 
	  robot_state_publisher's publishing frequency in "turtlebot_bringup/launch/includes/robot.launch.xml" 
	  can be increase from 5 to 10 Hz to avoid some TF warnings.
	-->

	<!-- Navigation stuff (move_base) -->
	<!-- TODO: Determine how to edit other files to match these forms -->
	<!-- Need to publish same information -->
<!-- 	<include unless="$(arg simulation)" file="$(find turtlebot_bringup)/launch/3dsensor.launch">
	 <arg     if="$(arg sw_registered)" name="depth_registration" value="false"/>
	 <arg unless="$(arg sw_registered)" name="depth_registration" value="true"/>
	</include>
	<include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/> -->

	<!-- Mapping -->
	<group ns="rtabmap">

		<!-- Image Rectification -->
		<node pkg="nodelet" type="nodelet" name="stereo_nodelet" args="manager" />

		<node pkg="stereo_image_proc" type="stereo_image_proc" name="bow_stereo_image_proc">
			<remap from="left/image_raw" to="/multisense_sl/camera/0/left/image_raw" />
			<remap from="left/camera_info" to="/multisense_sl/camera/0/left/camera_info" />
			<remap from="right/image_raw" to="/multisense_sl/camera/0/right/image_raw" />
			<remap from="right/camera_info" to="/multisense_sl/camera/0/right/camera_info" />
			<param name="disparity_range" value="128" />
		</node>

		<node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg args)">
			<param name="database_path"       type="string" value="$(arg database_path)"/>
			<param name="frame_id"            type="string" value="base_link"/>
			<param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>
			<param name="subscribe_rgb"		  type="bool"   value="false"/>
			<param name="subscribe_stereo"	  type="bool"   value="true"/>
			<param name="subscribe_depth"     type="bool"   value="true"/>
			<param name="subscribe_scan"      type="bool"   value="true"/>
			<param name="map_negative_poses_ignored" type="bool" value="true"/>

			<!-- When sending goals on /rtabmap/goal topic, use actionlib to communicate with move_base --> 
			<param name="use_action_for_goal" type="bool" value="true"/>
				<remap from="move_base"            to="/move_base"/>

			<!-- Inputs -->
			<remap from="scan"            to="$(arg scan_topic)"/>
			<!-- <remap from="rgb/image"       to="$(arg rgb_topic)"/> -->
			<remap from="depth/image"     to="$(arg depth_topic)"/>
			<!-- <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/> -->
			<remap from="left/image/rect" to="$(arg left_image_topic)"/>
			<remap from="left/camera_info" to="$(arg left_camera_info_topic)"/>
			<remap from="right/image/rect" to="$(arg right_image_topic)"/>
			<remap from="right/camera_info" to="$(arg right_camera_info_topic)"/>

			<!-- Fix odom covariance as in simulation the covariance in /odom topic is high (0.1 for linear and 0.05 for angular) -->
			<param unless="$(arg rgbd_odometry)" name="odom_frame_id" value="odom"/>
			<param unless="$(arg rgbd_odometry)" name="odom_tf_linear_variance" value="0.001"/>
			<param unless="$(arg rgbd_odometry)" name="odom_tf_angular_variance" value="0.001"/>

			<!-- output -->
			<remap from="grid_map" to="/map"/>

			<!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
			<param name="RGBD/ProximityBySpace"        type="string" value="true"/>   <!-- Local loop closure detection (using estimated position) with locations in WM -->
			<param name="RGBD/OptimizeFromGraphEnd"    type="string" value="false"/>  <!-- Set to false to generate map correction between /map and /odom -->
			<param name="Kp/MaxDepth"                  type="string" value="4.0"/>
			<param name="Reg/Strategy"                 type="string" value="0"/>      <!-- Loop closure transformation: 0=Visual, 1=ICP, 2=Visual+ICP -->
			<param name="Icp/CorrespondenceRatio"      type="string" value="0.3"/>
			<param name="Vis/MinInliers"               type="string" value="15"/>      <!-- 3D visual words minimum inliers to accept loop closure -->
			<param name="Vis/InlierDistance"           type="string" value="0.1"/>    <!-- 3D visual words correspondence distance -->
			<param name="RGBD/AngularUpdate"           type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
			<param name="RGBD/LinearUpdate"            type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
			<param name="RGBD/ProximityPathMaxNeighbors" type="string" value="0"/> 
			<param name="Rtabmap/TimeThr"              type="string" value="0"/>
			<param name="Mem/RehearsalSimilarity"      type="string" value="0.30"/>
			<param name="Reg/Force3DoF"                type="string" value="true"/>
			<param name="GridGlobal/MinSize"           type="string" value="20"/>

			<!-- localization mode -->
			<param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
			<param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
			<param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 
		</node>

		<!-- BA: Don't think this is used if I'm using subscribe_stereo -->
		<!-- Odometry : ONLY for testing without the actual robot! /odom TF should not be already published. -->
		<!-- <node if="$(arg rgbd_odometry)" pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
			<param name="frame_id"                    type="string" value="base_link"/>
			<param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
			<param name="Reg/Force3DoF"               type="string" value="true"/>
			<param name="Vis/InlierDistance"          type="string" value="0.05"/>

			<remap from="rgb/image"       to="$(arg rgb_topic)"/>
			<remap from="depth/image"     to="$(arg depth_topic)"/>
			<remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
		</node> -->

		<!-- visualization with rtabmapviz -->
		<!-- <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
			<param name="subscribe_depth"             type="bool" value="true"/>
			<param name="subscribe_scan"              type="bool" value="true"/>
			<param name="frame_id"                    type="string" value="base_footprint"/>
			<param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>

			<remap from="rgb/image"       to="$(arg rgb_topic)"/>
			<remap from="depth/image"     to="$(arg depth_topic)"/>
			<remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
			<remap from="scan"            to="/scan"/>
		</node> -->
	</group>
=======
	<!-- Stereo Mapping -->
	<!-- Image Rectification -->
	<node pkg="nodelet" type="nodelet" name="bow_stereo_nodelet" ns="bow" args="manager" />

	<node pkg="stereo_image_proc" type="stereo_image_proc" name="bow_stereo_image_proc" ns="bow">
		<remap from="left/image_raw" to="/multisense_sl/camera/0/left/image_raw" />
		<remap from="left/camera_info" to="/multisense_sl/camera/0/left/camera_info" />
		<remap from="right/image_raw" to="/multisense_sl/camera/0/right/image_raw" />
		<remap from="right/camera_info" to="/multisense_sl/camera/0/right/camera_info" />
		<param name="disparity_range" value="128" />

		<!-- Publications -->
		<remap from="points2" to="cloud"/>

	</node>

	<!-- Bow Stereo Odometry -->
	<node pkg="rtabmap_ros" type="stereo_odometry" name="stereo_odometry" ns="bow" output="screen" >
		<!-- <remap from="left/image_rect" to="left/image_rect" />
		<remap from="right/image_rect" to="right/image_rect" /> -->
		<remap from="left/camera_info" to="/multisense_sl/camera/0/left/camera_info" />
		<remap from="right/camera_info" to="/multisense_sl/camera/0/right/camera_info" />
		<remap from="odom" to="/bow/stereo_odometry" />

		<param name="frame_id" type="string" value="base_link" /> <!-- base_footprint? -->
		<param name="odom_frame_id" type="string" value="odom" />
		<param name="approx_sync" type="bool" value="true" />

		<param name="Vis/Strategy" type="string" value="0" /> <!-- 0 = BOW, 1 = OpticalFlow -->
		<param name="Vis/EstimationType" type="string" value="1" /> <!-- 3D -> 2D (PnP) -->
		<param name="Vis/MinInliers" type="string" value="10" />
		<param name="Vis/RoiRatios" type="string" value="0.03  0.03 0.04 0.04" />
		<param name="Vis/MaxDepth" type="string" value="25" /> <!-- Adjusted for ZED camera range -->
		<param name="VisBow/NNDR" type="string" value="0.8" />
		<param name="Vis/MaxFeatures" type="string" value="1000" />
		<param name="Vis/FillInfoData" type="string" value="false" />
		<param name="GFTT/MinDistance" type="string" value="0.3" /> <!-- Adjusted for ZED camera range -->
		<param name="GFTT/QualityLevel" type="string" value="0.00001" />
	</node>



	<!-- SLAM based only on the bow camera (for now) -->
	<!-- Visual SLAM: args: "delete_db_on_start" and "udebug" -->
	<node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" ns="bow" args="--delete_db_on_start" >
		<param name="frame_id" type="string" value="base_link" /> <!-- base_footprint? -->
		<param name="subscribe_stereo" type="bool" value="true" />
		<param name="subscribe_rgb" type="bool" value="false" />
		<param name="subscribe_depth" type="bool" value="false" /> <!-- Should probably set this to true once I figure out what's wrong with the map -->

		<param name="approx_sync" type="bool" value="true" />

		<!-- I think namespace will take effect here -->
		<!-- <remap from="left/image_rect" to="left/image_rect" />
		<remap from="right/image_rect" to="right/image_rect" /> -->
		<remap from="left/camera_info" to="/multisense_sl/camera/0/left/camera_info" />
		<remap from="right/camera_info" to="/multisense_sl/camera/0/right/camera_info" />
		<remap from="odom" to="stereo_odometry" />

		<param name="queue_size" type="int" value="30" />

		<!-- RTAB-Map's parameters -->
		<param name="Rtabmap/TimeThr" type="string" value="700" />
		<param name="Rtabmap/DetectionRate" type="string" value="1" />

		<param name="Kp/RoiRatios" type="string" value="0.03 0.03 0.04 0.04" />
		<param name="Kp/DetectorStrategy" type="string" value="0" /> <!-- Use SURF -->
		<param name="Kp/NNStrategy" type="string" value="1" />

		<param name="SURF/HessianThreshold" type="string" value="1000" />

		<param name="Vis/MinInliers" type="string" value="10" />
		<param name="Vis/EstimationType" type="string" value="1" /> <!-- 3D -> 2D (PnP) -->

		<param name="RGBD/LoopClosureReextractFeatures" type="string" value="true" />
		<param name="Vis/MaxFeatures" type="string" value="500" />
		<param name="Vis/MaxDepth" type="string" value="25" /> <!-- Adjusted for ZED camera range -->
	</node>
>>>>>>> origin/dev

</launch>