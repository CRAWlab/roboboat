<?xml version="1.0"?>
<!--

robobat_sim.launch
Author: Benjamin Armentor <benarmentor@gmail.com>

TODO:
* Wrap ICs with an if statement with an argument to simulate different initial conditions or poses?

Modified:
*

This file is basd on heron_world.launch from Clearpath Robotics:

Software License Agreement (BSD)

\file      heron_world.launch
\authors   Guy Stoppi <gstoppi@clearpathrobotics.com>
\copyright Copyright (c) 2018, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<launch>

	<!-- Re-including this from roboboat_world.launch. Not sure if entirely necessary -->
	<arg name="hydro_debug" default="0"/>
	<rosparam param="/use_sim_time">true</rosparam>

	<!-- Not sure why I need to include this, but it seems I do. -->
	<arg name="namespace" default=""/>
	<!-- I think you would need to change this to match roboboat_world.launch manually -->
	<arg name="config" default="base" />
	
	<!-- Vehicle's initial pose -->
	<!-- TODO: Wrap this with an if statement with an argument to simulate different initial conditions or poses? -->
	<arg name="x"     default="40"/>
	<arg name="y"     default="-40"/>
	<arg name="z"     value="0.13"/>
	<arg name="roll"  value="0"/>
	<arg name="pitch" value="0"/>
	<arg name="yaw"   default="0"/>

	<!-- Should these includes be in the <group> tag? -->
	<!-- File with all static transforms -->
	<include file="$(find roboboat_tf)/launch/tf.launch" ns="/$(arg namespace)"/>

	<!-- Launches roboboat's description nodes -->
	<include file="$(find roboboat_description)/launch/description.launch">
		<arg name="namespace" value="$(arg namespace)" />
		<arg name="hydro_debug" value="$(arg hydro_debug)" />
	</include>

	<!-- Basic localization -->
	<rosparam param="/$(arg namespace)/ekf_localization_node/tf_prefix" subst_value="True">$(arg namespace)</rosparam>
	<rosparam param="/$(arg namespace)/navsat_transform_node/tf_prefix" subst_value="True">$(arg namespace)</rosparam>
	<rosparam param="/$(arg namespace)/navsat_transform_node/use_odometry_yaw">true</rosparam>
	<include file="$(find roboboat_control)/launch/control.launch" ns="/$(arg namespace)" />
	
	<!-- Mapping -->
	<include file="$(find roboboat_mapping)/launch/mapping.launch" ns="/$(arg namespace)"/>

	<!-- Group everything under the namespace -->
	<group ns="/$(arg namespace)">

		<!-- Filter for Imu message -->
	    <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick">
	      <param name="~use_magnetic_field_msg" value="false" />
	      <param name="~use_mag" value="false" />
	      <param name="world_frame" value="enu" />
	      <param name="publish_debug_topics" value="true" />
	      <param name="~publish_tf" value="false" />
	    </node>

	    <!-- Translate Imu's quaternion to Roll/Pitch/Yaw -->
    	<node pkg="roboboat_gazebo" type="rpy_translator.py" name="rpy_translator" />

    	<!-- Translates navsat/velocity from Vector3Stamped to TwistStamped on navsat/vel -->
	    <node pkg="roboboat_gazebo" type="navsat_vel_translate.py" name="navvel_translate" />

	    <!-- Don't think this is needed? Recycled from Clearpath's Heron. -->
	    <!-- <node pkg="roboboat_gazebo" type="activate_control_service.py" name="activate_control_service" /> -->
	    
    	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    	<group if="$(eval namespace == '')">
	    	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model roboboat -param /robot_description"/>
	    </group>

	    <group unless="$(eval namespace == '')">
	      <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
	      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg namespace) -param /$(arg namespace)/robot_description"/>
    	</group>

	</group>

</launch>